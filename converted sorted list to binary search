/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
struct TreeNode* sortedListToBST(struct ListNode* head) {
    if(!head) return NULL;
    if(!head->next) {
        struct TreeNode* node = malloc(sizeof(struct TreeNode));
        node->val = head->val;
        node->left = NULL;
        node->right = NULL;
        return node;
    }

    struct ListNode* slow = head;
    struct ListNode* fast = head;
    struct ListNode* prev = head;

    while(fast && fast->next) {
        fast = fast->next->next;
        prev = slow;
        slow = slow->next;
    }

    prev->next = NULL;

    struct TreeNode* node = malloc(sizeof(struct TreeNode));
    node->val = slow->val;
    node->left = sortedListToBST(head);
    node->right = sortedListToBST(slow->next);

    return node;
}
